apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  annotations:
  labels:
    k8s-app: offchain-db-${HOSTNAME}
    io.kompose.service: offchain-db-${HOSTNAME}
  name: offchain-db
  namespace: ${KUBENS}
spec:
  selector:
    matchLabels:
      app: offchain-db-${HOSTNAME}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      labels:
#        io.kompose.network/kubefile_gsmawr_msp: "true"
        io.kompose.service: offchain-db-${HOSTNAME}
        app: offchain-db-${HOSTNAME}
    spec:
      containers:
      - image: mysql:5.7
        name: offchain-db-${HOSTNAME}
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: ${OFFCHAIN_MYSQL_ROOT_PASSWORD}
        - name: MYSQL_DATABASE
          value: ${OFFCHAIN_MYSQL_DB}
        - name: MYSQL_USER
          value: ${OFFCHAIN_MYSQL_USER}
        - name: MYSQL_PASSWORD
          value: ${OFFCHAIN_MYSQL_PASSWORD}
        ports:
        - containerPort: ${MYSQL_SERVER_PORT}
          name: db-port-${HOSTNAME}
        volumeMounts:
        - mountPath: /var/lib/mysql #/data
          name: data-pvc
          subPath: DB
      initContainers:
      - name: init-myservice
        image: busybox
        command: ['sh', '-c', 'mkdir -p var/lib/mysql/data/lost+found && rm -r var/lib/mysql/data/lost+found']
        volumeMounts:
        - mountPath: /var/lib/mysql/data
          name: data-pvc
          subPath: DB
      hostname: offchain-db-${HOSTNAME}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: data-pvc
        persistentVolumeClaim:
          claimName: data-claim