apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  annotations:
  labels:
    k8s-app: blockchain-adapter-${HOSTNAME}
    io.kompose.service: blockchain-adapter-${HOSTNAME}
  name: blockchain-adapter
  namespace: ${KUBENS}
spec:
  selector:
    matchLabels:
      app: blockchain-adapter-${HOSTNAME}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      labels:
#        io.kompose.network/kubefile_gsmawr_msp: "true"
        io.kompose.service: blockchain-adapter-${HOSTNAME}
        app: blockchain-adapter-${HOSTNAME}
    spec:
      containers:
      - image: ${IMAGE_BLOCKCHAIN_ADAPTER}
        name: blockchain-adapter-${HOSTNAME}
        envFrom:
          - configMapRef:
              name: proxy-environment-variables
        env:
        - name: BSA_PORT
          value: "${BLOCKCHAIN_ADAPTER_PORT}"
        - name: BSA_CCP
          value: ./ccp/${ORG}.json
        - name: BSA_CONFIG_DIR
          value: /app/config/
        ports:
        - containerPort: ${BLOCKCHAIN_ADAPTER_PORT}
          name: bap-${HOSTNAME}
        volumeMounts:
        - mountPath: /app/ccp
          name: data-pvc
          subPath: CCP
        - mountPath: /app/config
          name: data-pvc
          subPath: BCACONFIG
      imagePullSecrets:
      - name: nomad-secret
      hostname: blockchain-adapter-${HOSTNAME}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: data-pvc
        persistentVolumeClaim:
          claimName: data-claim
