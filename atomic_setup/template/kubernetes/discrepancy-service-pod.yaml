apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  annotations:
  labels:
    k8s-app: discrepancy-${HOSTNAME}
    io.kompose.service: discrepancy-${HOSTNAME}
  name: discrepancy-service
  namespace: ${KUBENS}
spec:
  selector:
    matchLabels:
      app: discrepancy-${HOSTNAME}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      labels:
#        io.kompose.network/kubefile_gsmawr_msp: "true"
        io.kompose.service: discrepancy-${HOSTNAME}
        app: discrepancy-${HOSTNAME}
    spec:
      containers:
      - name: dsdb
        image: ${IMAGE_MONGO}
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: proxy-environment-variables
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: '${DSDB_USER}'
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: '${DSDB_USERPW}'
        - name: MONGO_INITDB_DATABASE
          value: 'nomad'
        ports:
        - containerPort: 27017
          protocol: TCP
        volumeMounts:
        - mountPath: /data/db
          name: data-pvc
          subPath: peer/dsdb/

      - name: discrepancy-service
        image: ${IMAGE_DISCREPANCY_SERVICE}
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: proxy-environment-variables
        env:
        - name: DB_USER
          value: '${DSDB_USER}'
        - name: DB_PASSWD
          value: '${DSDB_USERPW}'          
        - name: MONGO_CONN_URL
          value: 'mongodb://discrepancy-db-${HOSTNAME}.${KUBENS}.svc.cluster.local:{DSDB_PORT}'
        ports:
        - containerPort: 8080
          protocol: TCP
      imagePullSecrets:
      - name: nomad-secret
      hostname: discrepancy-${HOSTNAME}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: data-pvc
        persistentVolumeClaim:
          claimName: data-claim
